name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
      branches: [ "master" ]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.5
      - name: Install dependencies
        working-directory: ./backend/foodgram
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt
      - name: Test with flake8 and Django test
        working-directory: ./backend/foodgram
        run: |
          python -m flake8
          python manage.py test --settings=foodgram.settings_for_tests --parallel auto

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:v1
          file: ./backend/foodgram/Dockerfile

      - name: Tar frontend build results
        run: tar -cvf deploy.tar /frontend/build /docs /infra/docker-compose.yml /infra/nginx.conf
      - name: Upload Frontend and configs
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: deploy.tar
          if-no-files-found: error
      - name: send_tar to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "deploy.tar"
          target: "~"
          overwrite: true
  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/master'
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              
              sudo docker compose stop
              sudo docker compose rm {{ secrets.DOCKER_USERNAME }}/api_yamdb:v1
              sudo docker volume prune
              
              rm -rf .env frontend/build docs infra/docker-compose.yml infra/nginx.conf
              
              
              tar -xvf deploy.tar
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/api_yamdb:v1
              touch .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              echo DJANGO_KEY=${{ secrets.DJANGO_KEY }} >> .env
              echo HOST=${{ secrets.HOST }} >> .env
              sudo docker compose up -d
              sudo docker compose exec web python manage.py migrate
              sudo docker compose exec web python manage.py collectstatic --no-input